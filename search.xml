<?xml version="1.0" encoding="utf-8"?>
<search>
  
    <entry>
      <title><![CDATA[Comprehensive Analysis of GitHub RST and Git SSL_ERR_SYSCALL]]></title>
      <url>/2024/12-09/01</url>
      <content type="text"><![CDATA[  Eliminate subjective emotional factors  Consider multiple possible causes  Identify and establish connections between issues (commonalities)Subjective emotional factors compromise objective analytical judgment and must be eliminated to ensure accurate analysis.RSTNetwork reset due to blocking or issues with hosts IP-DNS mapping.SSL_ERR_SYSCALLAn issue where a manually configured proxy socket for the transport layer causes inaccessibility. It could stem from proxy configuration errors or issues with the URL, which may involve improper hosts mapping settings.AnecdoteA ping test for GitHub revealed that although it couldn’t be pinged, the website was still accessible. For security considerations, the website likely disabled ICMP responses or enabled ICMP filtering.Why Are Some Websites Unreachable via PING but Still Accessible?When you try to ping a website, it shows Request timed out . Four packets are sent, but none are returned, resulting in a 100% packet loss. If it’s unreachable via PING, why is it still accessible?The likely reason is that the website has disabled ICMP responses or enabled ICMP filtering. If ICMP filtering is set, devices not on the whitelist will not receive a response.Disabling ICMP could be based on the following considerations:  ICMP Protocol and Network Security          The ICMP protocol is critically important for network security. However, its characteristics make it susceptible to being used for attacks on routers and hosts within the network.        ICMP Flood Attacks          Continuously sending large amounts of ICMP packets to a target host can overwhelm its system, eventually leading to a crash. Excessive ICMP packets can create an “ICMP storm,” consuming significant CPU resources on the target host to process them.      By disabling ICMP responses, websites can protect themselves against such vulnerabilities and attacks.$ curl -v www.github.com*   Trying 13.250.177.223:80...* Connected to www.github.com (13.250.177.223) port 80 (#0)&gt; GET / HTTP/1.1&gt; Host: www.github.com&gt; User-Agent: curl/7.70.0&gt; Accept: */*&gt;* Recv failure: Connection was reset* Closing connection 0curl: (56) Recv failure: Connection was resetSummaryRST and SSL_ERR_SYSCALL share a common problem: hosts IP-DNS mapping.The application-layer hosts file resolves domain names to specific IP addresses. A proxy merely forwards client requests for these addresses without transforming the IP path. If either the IP or DNS in the hosts file doesn’t exist, access will fail, even with a configured proxy.Since hosts files have higher precedence over remote DNS, the system queries the hosts file for DNS mapping first. If no mapping exists in hosts, it queries remote DNS servers. Although a VPN creates a tunnel for external server access, the DNS mapping sent by the host to external servers remains incorrect, leading to inaccessibility.Even with hosts redirection, temporary access to sites may work due to factors like keep-alive, browser, or system DNS caching.]]></content>
      <categories>
        
          <category> 2024. </category>
        
      </categories>
      <tags>
        
          <tag> chip </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Solution to Slow Download Speeds for Information Development Environment Packages]]></title>
      <url>/2024/12-08/01</url>
      <content type="text"><![CDATA[Before proceeding, you may need to read 《This Book Will Help You Connect to the Internet》 as background knowledge.GitHub DownloadsCopy the following hosts into C:\Windows\System32\drivers\etc\hosts, and then run the command ipconfig /flushdns to refresh the DNS cache. This host is used to bypass the GFW’s restrictions on GitHub (asw, ssh) downloads and cloning. (Note: This does not eliminate possible server throughput or geographical fiber optic limitations.)If the IP or domain of a host changes and is not updated in time, it may cause connection errors and reset the site’s pointing, making it inaccessible. See GitHub RST and Git SSL_ERR_SYSCALL Comprehensive Analysis for more details.For releases, these may come in compressed formats like zip, 7z, etc., or as software programs like exe or msi.      Visit www.ipaddress.com and look up the DNS resolution for the following links:     github.com assets-cdn.github.com github.global.ssl.fastly.net # Actual download link for raw.githubusercontent.com codeload.github.com            Record the IP addresses found and add them to the C:\Windows\System32\drivers\etc\Hosts file.        Add the AWS host:   219.76.4.4 s3.amazonaws.com 219.76.4.4 github-cloud.s3.amazonaws.com  Run cmd and input ipconfig /flushdns to refresh the system DNS.We can also use jsDelivr CDN to speed up file downloads, or use it to set up an image hosting service with faster access speeds.For a stronger solution, use the Chrome extension “GitHub Acceleration” combined with IDM/FDM.GitHub.io Parsingraw/avatars.githubusercontent.com Cannot ResolveBesides using hosts, you can also configure popular domestic DNS servers for resolution. Since 1.1.1.1 might not always work, domestic DNS servers are preferred.  Yandex.DNS: 77.88.8.8 or 77.88.8.1  Rostelecom DNS: 77.37.179.189 (Moscow) or 77.37.209.86  Beeline DNS (VimpelCom): 195.239.39.250 or 213.87.84.237NET::ERR_CERT_AUTHORITY_INVALIDBrowsers may show a warning: “An attacker might be trying to steal your information from xxx.github.io.” This could be caused by misconfigured certificates or an attacker intercepting your connection. After continuing, you might encounter a 403 error.Solution: Change the DNS to Yandex, Rostelecom, or Beeline DNS as mentioned above, then run ipconfig /flushdns to refresh the cache. The issue arises because the ISP’s DNS might provide incorrect root certificates, so switching to a third-party DNS with the correct certificates resolves it.Git Clone Slow Speed IssueGit or Terminal Proxy Solutionsgit# Set up proxygit config --global http.proxy 'socks5://127.0.0.1:1080'git config --global https.proxy 'socks5://127.0.0.1:1080'# Remove proxygit config --global --unset https.proxy 'socks5://127.0.0.1:1080'git config --global --unset http.proxy 'socks5://127.0.0.1:1080'mac# mac terminal settingsexport http_proxy="socks5://127.0.0.1:1080"export https_proxy="socks5://127.0.0.1:1080"## Set in .bashrc or .zshrcalias setproxy="export ALL_PROXY=socks5://127.0.0.1:1080"alias unsetproxy="unset ALL_PROXY"openssh# GitHub SSH Configuration## https://help.github.com/articles/using-ssh-over-the-https-port/# HTTP ProxyProxyCommand socat - PROXY:127.0.0.1:%h:%p,proxyport=8848# Socks5 Proxy ProxyCommand nc -v -x 127.0.0.1:1080 %h %pFor reverse proxy acceleration, you can use Static CDN to load images and content:  raw.githubusercontent.com can be replaced by raw.staticdn.net.Environment Package AccelerationpipSince some projects require Python, you can use the following pip download acceleration method: pip install &lt;package_name&gt; -i &lt;mirror_source_address&gt;.For example, to install Jupyter: pip install jupyter - i http://mirrors.aliyun.com/pypi/simple/Common PyPI mirrors in Russia:  Yandex: https://mirror.yandex.ru/mirrors/pypi/simple/  Moscow State University: http://pypi.mirror.msu.ru/simple/  Rostelecom: Available through regional services but not widely publicized.To set the default mirror permanently:pip install --upgrade pippip config set global.index-url https://mirror.yandex.ru/mirrors/pypi/simple/gemgem sources --remove https://rubygems.org/  # Remove the default sourcegem sources -a https://mirror.yandex.ru/rubygems/  # Add the Yandex mirrornpmnpm config set registry https://mirror.yandex.ru/npm/  # Set Yandex as the npm registrynpm config get registry  # Verify the current registry settingSummaryThe main issues with downloading environment packages are:  Mirror sources  Proxy &amp; VPN, and hosts  Matching versions of packages and libraries]]></content>
      <categories>
        
          <category> 2024. </category>
        
      </categories>
      <tags>
        
          <tag> chip </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
</search>
