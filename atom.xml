<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="/atom.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2025-01-21T02:32:08+00:00</updated><id>/atom.xml</id><title type="html">Excalibra’s blog</title><subtitle>Description</subtitle><author><name>Excalibra</name></author><entry><title type="html">The Difference Between Computer Sleep and Hibernate Modes, and How to Set Up Hibernate</title><link href="/2025/01-19/01" rel="alternate" type="text/html" title="The Difference Between Computer Sleep and Hibernate Modes, and How to Set Up Hibernate" /><published>2025-01-19T23:25:00+00:00</published><updated>2025-01-19T23:25:00+00:00</updated><id>/2025/01-19/The%20Difference%20Between%20Computer%20Sleep%20and%20Hibernate%20Modes,%20and%20How%20to%20Set%20Up%20Hibernate</id><content type="html" xml:base="/2025/01-19/01"><![CDATA[<h1 id="the-difference-between-sleep-and-hibernate-on-computers-and-how-to-enable-hibernate">The Difference Between Sleep and Hibernate on Computers, and How to Enable Hibernate</h1>

<h2 id="1-reasons-to-choose-sleep-or-hibernate">1. Reasons to Choose Sleep or Hibernate</h2>

<p>Imagine you’re writing a paper, your browser has multiple research tabs open, and you’re working on an unfinished coding project. The day’s work isn’t complete, but you need a break and want to continue tomorrow. If you shut down your computer now, all your progress will be lost. What should you do?</p>

<p>Thankfully, your computer offers two handy options: <strong>Sleep</strong> and <strong>Hibernate</strong>.</p>

<!-- more -->

<p>By choosing either Sleep or Hibernate, you can resume your work exactly where you left off, ensuring all your data is preserved.</p>

<p>But what is the difference between Sleep and Hibernate?</p>

<hr />

<h2 id="2-key-differences-between-sleep-and-hibernate">2. Key Differences Between Sleep and Hibernate</h2>

<h3 id="21-data-storage-location">2.1 Data Storage Location</h3>

<ul>
  <li>
    <p><strong>Sleep</strong>: Data is stored in the computer’s <strong>RAM (memory)</strong>. The RAM remains powered, while other components are turned off. This means Sleep mode still consumes a small amount of power. If the power source is disconnected, any unsaved data will be lost.</p>
  </li>
  <li>
    <p><strong>Hibernate</strong>: Data is saved to the <strong>hard drive</strong>, and all components, including the RAM, are powered down. When the system is turned on again, data is restored from the hard drive. Hibernate consumes no power, similar to shutting down the computer.</p>
  </li>
</ul>

<hr />

<h3 id="22-wake-up-method">2.2 Wake-Up Method</h3>

<ul>
  <li>
    <p><strong>Sleep</strong>: To wake the computer from Sleep, simply move the mouse or press a key on the keyboard.</p>
  </li>
  <li>
    <p><strong>Hibernate</strong>: To wake the computer from Hibernate, you must press the power button.</p>
  </li>
</ul>

<hr />

<h3 id="23-wake-up-speed">2.3 Wake-Up Speed</h3>

<ul>
  <li>Sleep mode resumes faster since data is restored directly from RAM.</li>
  <li>Hibernate mode takes longer to resume because data is loaded from the hard drive.</li>
</ul>

<hr />

<h2 id="3-how-to-enable-hibernate-in-windows">3. How to Enable Hibernate in Windows</h2>

<p>Newly installed Windows systems, whether Windows 7 or Windows 10, come with Sleep enabled by default. However, Hibernate is often disabled. To enable Hibernate, two steps are required:</p>

<ol>
  <li>Run the command to enable Hibernate.</li>
  <li>Configure the settings in the operating system interface.</li>
</ol>

<p>To disable Hibernate, simply reverse either of the steps above.</p>

<h3 id="commands-to-enable-or-disable-hibernate">Commands to Enable or Disable Hibernate</h3>

<ul>
  <li><strong>Enable Hibernate</strong>: <code class="language-plaintext highlighter-rouge">powercfg.exe /hibernate on</code></li>
  <li><strong>Disable Hibernate</strong>: <code class="language-plaintext highlighter-rouge">powercfg.exe /hibernate off</code></li>
</ul>

<hr />

<h3 id="enabling-hibernate-on-windows-systems">Enabling Hibernate on Windows Systems</h3>

<p>For a Windows operating system where the Hibernate feature is not displayed, the steps to enable Hibernate are as follows (in C++ pseudocode):</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. Press Win+R and enter "powercfg.exe /hibernate on"; // Note: There is a space between "exe" and "/".

if (OperationSystem == "Windows 7")
{
    2. Press Win+R and enter "control"; // This opens the Control Panel.
    3. Navigate to "Hardware and Sound".
    4. Under "Power Options", select "Change power-saving settings".
    5. Choose "Change plan settings".
    6. Click on "Change advanced power settings".
    7. Expand "Sleep".
    8. Set "Allow hybrid sleep" to "Off".
    9. Click "OK".
}

if (OperationSystem == "Windows 10")
{
    2. Press Win+R and enter "control"; // This opens the Control Panel.
    3. Navigate to "Hardware and Sound".
    4. Under "Power Options", select "Change what the power button does".
    5. Click "Change settings that are currently unavailable".
    6. Under "Shutdown settings", check the box for "Hibernate".
    7. Click "Save changes".
}
</code></pre></div></div>

<h3 id="the-accompanying-image-for-the-operating-system-front-end-settings-is-as-follows">The accompanying image for the operating system front-end settings is as follows:</h3>

<h4 id="step-1-run-the-command">Step 1: Run the Command</h4>
<ol>
  <li>Press <strong>Win + R</strong>, type <code class="language-plaintext highlighter-rouge">powercfg.exe /hibernate on</code> (or <code class="language-plaintext highlighter-rouge">powercfg -h on</code>), and press Enter.</li>
</ol>

<h4 id="step-2-adjust-system-settings">Step 2: Adjust System Settings</h4>
<ul>
  <li><strong>Windows 7</strong>:
    <ol>
      <li>Press <strong>Win + R</strong>, type <code class="language-plaintext highlighter-rouge">control</code>, and open the Control Panel.</li>
      <li>Go to <strong>Hardware and Sound</strong> &gt; <strong>Power Options</strong> &gt; <strong>Change Plan Settings</strong> &gt; <strong>Change Advanced Power Settings</strong>.</li>
      <li>Navigate to <strong>Sleep</strong> &gt; <strong>Allow Hybrid Sleep</strong> and set it to <strong>Off</strong>.</li>
      <li>Click <strong>OK</strong> to save changes.</li>
    </ol>
  </li>
  <li><strong>Windows 10</strong>:
    <ol>
      <li>
        <p>Press <strong>Win + R</strong>, type <code class="language-plaintext highlighter-rouge">control</code>, and open the Control Panel.
<img src="https://github.com/user-attachments/assets/eeaaed6f-ec20-42a9-b93f-5518d90b1b37" alt="image" /></p>
      </li>
      <li>
        <p>Go to <strong>Hardware and Sound</strong> &gt; <strong>Power Options</strong> &gt; <strong>Choose what the power button does</strong>.
<img src="https://github.com/user-attachments/assets/b11e3a71-c4ec-4786-a2a7-e424bf68ff21" alt="image" /></p>
      </li>
      <li>
        <p>Click <strong>Change settings that are currently unavailable</strong>.
<img src="https://github.com/user-attachments/assets/b47a786e-3425-4a04-ba79-2902dff15ec2" alt="image" /></p>
      </li>
      <li>
        <p>Under <strong>Shutdown settings</strong>, check the box for <strong>Hibernate</strong>.
<img src="https://github.com/user-attachments/assets/963eabd0-23d6-4098-8e15-a9462af32215" alt="image" /></p>
      </li>
      <li>
        <p>Click <strong>Save Changes</strong>.</p>
      </li>
    </ol>
  </li>
</ul>

<hr />

<h3 id="how-to-disable-hibernate">How to Disable Hibernate</h3>
<p>To remove the Hibernate option, use the command <code class="language-plaintext highlighter-rouge">powercfg.exe /hibernate off</code> (or <code class="language-plaintext highlighter-rouge">powercfg -h off</code>) in Step 1. No further action is needed.</p>

<p><img src="https://github.com/user-attachments/assets/b614ed7d-4bdb-4c3b-8a65-f21a7c16748f" alt="image" /></p>

<hr />

<h3 id="visual-guide">Visual Guide</h3>
<p>Below are visual steps for enabling Hibernate:</p>

<ol>
  <li>
    <p>Open the Run dialog with <strong>Win + R</strong> and enter the command <code class="language-plaintext highlighter-rouge">powercfg.exe /hibernate on</code>.
<img src="https://github.com/user-attachments/assets/e6e76129-e794-4dbf-b614-fb2dd991ffa5" alt="image" /></p>
  </li>
  <li>
    <p>Follow the respective settings adjustments for your operating system (Windows 7 or Windows 10) as outlined above.</p>
  </li>
</ol>

<hr />]]></content><author><name>Excalibra</name></author><category term="[&quot;2025.&quot;]" /><category term="windows" /><summary type="html"><![CDATA[The Difference Between Sleep and Hibernate on Computers, and How to Enable Hibernate 1. Reasons to Choose Sleep or Hibernate Imagine you’re writing a paper, your browser has multiple research tabs open, and you’re working on an unfinished coding project. The day’s work isn’t complete, but you need a break and want to continue tomorrow. If you shut down your computer now, all your progress will be lost. What should you do? Thankfully, your computer offers two handy options: Sleep and Hibernate.]]></summary></entry><entry><title type="html">Comprehensive Analysis of GitHub RST and Git SSL_ERR_SYSCALL</title><link href="/2024/12-09/01" rel="alternate" type="text/html" title="Comprehensive Analysis of GitHub RST and Git SSL_ERR_SYSCALL" /><published>2024-12-09T11:58:00+00:00</published><updated>2024-12-09T11:58:00+00:00</updated><id>/2024/12-09/Comprehensive-Analysis-of-GitHub-RST-and-Git-SSL-ERR-SYSCALL</id><content type="html" xml:base="/2024/12-09/01"><![CDATA[<ul>
  <li>Eliminate subjective emotional factors</li>
  <li>Consider multiple possible causes</li>
  <li>Identify and establish connections between issues (commonalities)</li>
</ul>

<p>Subjective emotional factors compromise objective analytical judgment and must be eliminated to ensure accurate analysis.</p>

<!-- more -->

<h3 id="rst">RST</h3>

<p>Network reset due to blocking or issues with hosts IP-DNS mapping.</p>

<h3 id="ssl_err_syscall">SSL_ERR_SYSCALL</h3>

<p>An issue where a manually configured proxy socket for the transport layer causes inaccessibility. It could stem from proxy configuration errors or issues with the URL, which may involve improper hosts mapping settings.</p>

<h3 id="anecdote">Anecdote</h3>

<p>A ping test for GitHub revealed that although it couldn’t be pinged, the website was still accessible. For security considerations, the website likely disabled ICMP responses or enabled ICMP filtering.</p>

<h3 id="why-are-some-websites-unreachable-via-ping-but-still-accessible">Why Are Some Websites Unreachable via PING but Still Accessible?</h3>

<p>When you try to ping a website, it shows <code class="language-plaintext highlighter-rouge">Request timed out </code>. Four packets are sent, but none are returned, resulting in a 100% packet loss. If it’s unreachable via PING, why is it still accessible?</p>

<p>The likely reason is that the website has disabled ICMP responses or enabled ICMP filtering. If ICMP filtering is set, devices not on the whitelist will not receive a response.</p>

<p>Disabling ICMP could be based on the following considerations:</p>

<ol>
  <li>ICMP Protocol and Network Security
    <ul>
      <li>The ICMP protocol is critically important for network security. However, its characteristics make it susceptible to being used for attacks on routers and hosts within the network.</li>
    </ul>
  </li>
  <li>ICMP Flood Attacks
    <ul>
      <li>Continuously sending large amounts of ICMP packets to a target host can overwhelm its system, eventually leading to a crash. Excessive ICMP packets can create an “ICMP storm,” consuming significant CPU resources on the target host to process them.</li>
    </ul>
  </li>
</ol>

<p>By disabling ICMP responses, websites can protect themselves against such vulnerabilities and attacks.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ curl -v www.github.com
*   Trying 13.250.177.223:80...
* Connected to www.github.com (13.250.177.223) port 80 (#0)
&gt; GET / HTTP/1.1
&gt; Host: www.github.com
&gt; User-Agent: curl/7.70.0
&gt; Accept: */*
&gt;
* Recv failure: Connection was reset
* Closing connection 0
curl: (56) Recv failure: Connection was reset
</code></pre></div></div>

<h3 id="summary">Summary</h3>

<p>RST and SSL_ERR_SYSCALL share a common problem: hosts IP-DNS mapping.</p>

<p>The application-layer hosts file resolves domain names to specific IP addresses. A proxy merely forwards client requests for these addresses without transforming the IP path. If either the IP or DNS in the hosts file doesn’t exist, access will fail, even with a configured proxy.</p>

<p>Since hosts files have higher precedence over remote DNS, the system queries the hosts file for DNS mapping first. If no mapping exists in hosts, it queries remote DNS servers. Although a VPN creates a tunnel for external server access, the DNS mapping sent by the host to external servers remains incorrect, leading to inaccessibility.</p>

<p>Even with hosts redirection, temporary access to sites may work due to factors like <code class="language-plaintext highlighter-rouge">keep-alive</code>, browser, or system DNS caching.</p>]]></content><author><name>Excalibra</name></author><category term="[&quot;2024.&quot;]" /><category term="chip" /><summary type="html"><![CDATA[Eliminate subjective emotional factors Consider multiple possible causes Identify and establish connections between issues (commonalities) Subjective emotional factors compromise objective analytical judgment and must be eliminated to ensure accurate analysis.]]></summary></entry><entry><title type="html">Solution to Slow Download Speeds for Information Development Environment Packages</title><link href="/2024/12-08/01" rel="alternate" type="text/html" title="Solution to Slow Download Speeds for Information Development Environment Packages" /><published>2024-12-08T17:01:43+00:00</published><updated>2024-12-08T17:01:43+00:00</updated><id>/2024/12-08/Solution-to-Slow-Download-Speeds-for-Information-Development-Environment-Packages</id><content type="html" xml:base="/2024/12-08/01"><![CDATA[<p>Before proceeding, you may need to read <a href="https://github.com/Excalibra/network-tunneling">《This Book Will Help You Connect to the Internet》</a> as background knowledge.</p>

<!-- more -->

<h2 id="github-downloads">GitHub Downloads</h2>

<p>Copy the following hosts into <code class="language-plaintext highlighter-rouge">C:\Windows\System32\drivers\etc\hosts</code>, and then run the command <code class="language-plaintext highlighter-rouge">ipconfig /flushdns</code> to refresh the DNS cache. This host is used to bypass the GFW’s restrictions on GitHub (asw, ssh) downloads and cloning. (Note: This does not eliminate possible server throughput or geographical fiber optic limitations.)</p>

<p><strong>If the IP or domain of a host changes and is not updated in time, it may cause connection errors and reset the site’s pointing, making it inaccessible.</strong> See <a href="#">GitHub RST and Git SSL_ERR_SYSCALL Comprehensive Analysis</a> for more details.</p>

<p>For releases, these may come in compressed formats like zip, 7z, etc., or as software programs like exe or msi.</p>

<ol>
  <li>
    <p>Visit <a href="https://www.ipaddress.com/">www.ipaddress.com</a> and look up the DNS resolution for the following links:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> github.com
 assets-cdn.github.com
 github.global.ssl.fastly.net

 # Actual download link for raw.githubusercontent.com
 codeload.github.com
</code></pre></div>    </div>
  </li>
  <li>
    <p>Record the IP addresses found and add them to the <code class="language-plaintext highlighter-rouge">C:\Windows\System32\drivers\etc\Hosts</code> file.</p>
  </li>
  <li>
    <p>Add the AWS host:</p>
  </li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> 219.76.4.4 s3.amazonaws.com
 219.76.4.4 github-cloud.s3.amazonaws.com
</code></pre></div></div>
<ol>
  <li>Run <code class="language-plaintext highlighter-rouge">cmd</code> and input <code class="language-plaintext highlighter-rouge">ipconfig /flushdns</code> to refresh the system DNS.</li>
</ol>

<p>We can also use <a href="https://www.jsdelivr.com">jsDelivr</a> CDN to speed up file downloads, or use it to set up an image hosting service with faster access speeds.</p>

<p>For a stronger solution, use the Chrome extension “GitHub Acceleration” combined with IDM/FDM.</p>

<h2 id="githubio-parsing">GitHub.io Parsing</h2>

<h3 id="rawavatarsgithubusercontentcom-cannot-resolve">raw/avatars.githubusercontent.com Cannot Resolve</h3>

<p>Besides using hosts, you can also configure popular domestic DNS servers for resolution. Since 1.1.1.1 might not always work, domestic DNS servers are preferred.</p>

<ul>
  <li>Yandex.DNS: 77.88.8.8 or 77.88.8.1</li>
  <li>Rostelecom DNS: 77.37.179.189 (Moscow) or 77.37.209.86</li>
  <li>Beeline DNS (VimpelCom): 195.239.39.250 or 213.87.84.237</li>
</ul>

<h3 id="neterr_cert_authority_invalid">NET::ERR_CERT_AUTHORITY_INVALID</h3>

<p>Browsers may show a warning: “An attacker might be trying to steal your information from xxx.github.io.” This could be caused by misconfigured certificates or an attacker intercepting your connection. After continuing, you might encounter a 403 error.</p>

<p>Solution: Change the DNS to Yandex, Rostelecom, or Beeline DNS as mentioned above, then run <code class="language-plaintext highlighter-rouge">ipconfig /flushdns</code> to refresh the cache. The issue arises because the ISP’s DNS might provide incorrect root certificates, so switching to a third-party DNS with the correct certificates resolves it.</p>

<h2 id="git-clone-slow-speed-issue">Git Clone Slow Speed Issue</h2>

<h3 id="git-or-terminal-proxy-solutions">Git or Terminal Proxy Solutions</h3>

<p><strong><em>git</em></strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># Set up proxy
git config --global http.proxy 'socks5://127.0.0.1:1080'
git config --global https.proxy 'socks5://127.0.0.1:1080'
# Remove proxy
git config --global --unset https.proxy 'socks5://127.0.0.1:1080'
git config --global --unset http.proxy 'socks5://127.0.0.1:1080'

</code></pre></div></div>

<p><strong><em>mac</em></strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
# mac terminal settings

export http_proxy="socks5://127.0.0.1:1080"
export https_proxy="socks5://127.0.0.1:1080"

## Set in .bashrc or .zshrc
alias setproxy="export ALL_PROXY=socks5://127.0.0.1:1080"
alias unsetproxy="unset ALL_PROXY"
</code></pre></div></div>

<p><strong><em>openssh</em></strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
# GitHub SSH Configuration
## https://help.github.com/articles/using-ssh-over-the-https-port/

# HTTP Proxy
ProxyCommand socat - PROXY:127.0.0.1:%h:%p,proxyport=8848

# Socks5 Proxy
 ProxyCommand nc -v -x 127.0.0.1:1080 %h %p
</code></pre></div></div>

<p>For reverse proxy acceleration, you can use Static CDN to load images and content:</p>

<ul>
  <li>raw.githubusercontent.com can be replaced by raw.staticdn.net.</li>
</ul>

<h2 id="environment-package-acceleration">Environment Package Acceleration</h2>

<h3 id="pip">pip</h3>

<p>Since some projects require Python, you can use the following pip download acceleration method: <code class="language-plaintext highlighter-rouge">pip install &lt;package_name&gt; -i &lt;mirror_source_address&gt;</code>.</p>

<p>For example, to install Jupyter: <code class="language-plaintext highlighter-rouge">pip install jupyter - i http://mirrors.aliyun.com/pypi/simple/</code></p>

<p>Common PyPI mirrors in Russia:</p>

<ul>
  <li>Yandex: https://mirror.yandex.ru/mirrors/pypi/simple/</li>
  <li>Moscow State University: http://pypi.mirror.msu.ru/simple/</li>
  <li>Rostelecom: Available through regional services but not widely publicized.</li>
</ul>

<p>To set the default mirror permanently:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pip install --upgrade pip
pip config set global.index-url https://mirror.yandex.ru/mirrors/pypi/simple/

</code></pre></div></div>

<h3 id="gem">gem</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem sources --remove https://rubygems.org/  # Remove the default source
gem sources -a https://mirror.yandex.ru/rubygems/  # Add the Yandex mirror
</code></pre></div></div>

<h3 id="npm">npm</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm config set registry https://mirror.yandex.ru/npm/  # Set Yandex as the npm registry
npm config get registry  # Verify the current registry setting
</code></pre></div></div>

<h2 id="summary">Summary</h2>

<p>The main issues with downloading environment packages are:</p>

<ul>
  <li>Mirror sources</li>
  <li>Proxy &amp; VPN, and hosts</li>
  <li>Matching versions of packages and libraries</li>
</ul>]]></content><author><name>Excalibra</name></author><category term="[&quot;2024.&quot;]" /><category term="chip" /><summary type="html"><![CDATA[Before proceeding, you may need to read 《This Book Will Help You Connect to the Internet》 as background knowledge.]]></summary></entry></feed>